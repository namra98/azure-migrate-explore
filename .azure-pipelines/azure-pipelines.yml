trigger:
- main
pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'windows-2019'

variables:
  RootDirectory: '$(Build.SourcesDirectory)'
  Solution: '$(RootDirectory)\src\Azure-Migrate-Export.sln'
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  CopySourceFolder: '$(RootDirectory)\src\bin\Release\'
  OutputRootDirectory: '$(Build.ArtifactStagingDirectory)'
  CopyTargetFolder: '$(OutputRootDirectory)\AzMigExport'

  major: 3
  minor: 0

name: $(major).$(minor).$(Year:yy)$(DayOfYear).$(Rev:r)

stages:
  - stage: Build_Stage
    jobs:
      - job: Build_Job

        steps:
        - task: CmdLine@2
          displayName: 'Set Assembly Version'
          inputs:
            script: '$(RootDirectory)\.version\version.cmd'
            workingDirectory: '$(RootDirectory)'

        - task: NuGetToolInstaller@1
          displayName: 'Installing NuGet Tool'

        - task: NuGetCommand@2
          displayName: 'Restore Packages'
          inputs:
            command: 'restore'
            includeNuGetOrg: true
            restoreSolution: '$(Solution)'

        - task: VSBuild@1
          displayName: 'Build Solution'
          inputs:
            solution: '$(Solution)'
            msbuildArgs: '/p:TargetProfile=Cloud'
            platform: '$(BuildPlatform)'
            configuration: '$(BuildConfiguration)'

        - task: CredScan@3 # Secure Development tools extension should be installed in ADO organization
          displayName: 'Run CredScan'
          inputs:
            toolMajorVersion: V2
            outputFormat: sarif
            scanFolder: '$(RootDirectory)'
            suppressionsFile: '$(RootDirectory)\.config\CredScanSuppressions.json'

        - task: CopyFiles@2
          displayName: 'Copy DLLs to AzMigExport'
          inputs:
            SourceFolder: '$(CopySourceFolder)'
            TargetFolder: '$(CopyTargetFolder)'
            OverWrite: true
            Contents: '**\*.dll'

        - task: CopyFiles@2
          displayName: 'Copy Executable to AzMigExport'
          inputs:
            SourceFolder: '$(CopySourceFolder)'
            TargetFolder: '$(CopyTargetFolder)'
            OverWrite: true
            Contents: '**\Azure-Migrate-Export.exe'

        - task: CopyFiles@2
          displayName: 'Copy Config to AzMigExport'
          inputs:
            SourceFolder: '$(CopySourceFolder)'
            TargetFolder: '$(CopyTargetFolder)'
            OverWrite: true
            Contents: '**\Azure-Migrate-Export.exe.config'

        - task: CopyFiles@2
          displayName: 'Copy PBIT to AzMigExport'
          inputs:
            SourceFolder: '$(CopySourceFolder)'
            TargetFolder: '$(CopyTargetFolder)'
            OverWrite: true
            Contents: '**\Azure_Migration_and_Modernization.pbit'

        - task: CopyFiles@2
          displayName: 'Copy README to AzMigExport'
          inputs:
            SourceFolder: '$(CopySourceFolder)'
            TargetFolder: '$(CopyTargetFolder)'
            OverWrite: true
            Contents: '**\README.txt'
        
        - task: BinSkim@4
          displayName: 'Run BinSkim'
          inputs:
            InputType: 'Basic'
            Function: 'analyze'
            AnalyzeTarget: '$(OutputRootDirectory)\AzMigExport\*.dll;$(OutputRootDirectory)\AzMigExport\*.exe'
            AnalyzeStatistics: true
        
        - task: PoliCheck@2
          displayName: 'Run PoliCheck'
          inputs:
            targetArgument: '$(OutputRootDirectory)\AzMigExport'
        
        - task: AntiMalware@4
          displayName: 'Run AntiMalware'
          inputs:
            FileOrDirPath: '$(RootDirectory)'

        - task: ComponentGovernanceComponentDetection@0
          displayName: 'Component Detection'
          inputs:
            scanType: 'Register'
            verbosity: 'Verbose'
            alertWarningLevel: 'High'

        - task: SdtReport@2
          displayName: 'Generate Security Analysis Report'
          inputs:
            TsvFile: false
            AllTools: false
            BinSkim: true
            CredScan: true
            MSRD: false
            RoslynAnalyzers: false
            PoliCheck: true
            AntiMalware: true
            TSLint: false
            ToolLogsNotFoundAction: 'Standard'
        
        - task: PublishSecurityAnalysisLogs@3
          displayName: 'Publish Security Analysis Report'
          inputs:
            ArtifcatName: 'CodeAnalysisLogs'
            ArtifactType: 'Container'
            AllTools: true
            ToolLogsNotFoundAction: 'Standard'
        
        - task: PostAnalysis@2
          displayName: 'Stop on Security Errors'
          inputs:
            AllTools: false
            BinSkim: false
            CredScan: true
            PoliCheck: true
            AntiMalware: true
            ToolLogsNotFoundAction: 'Standard'

        - task: PublishBuildArtifacts@1
          condition: succeededOrFailed()
          displayName: 'Publish Build Artifacts'
          inputs:
            artifactName: 'drop_build'